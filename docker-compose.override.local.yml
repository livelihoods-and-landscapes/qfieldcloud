version: '3.7'

services:

  app:
    ports:
      # allow direct access without caddy
      - "8000:8000"
    volumes:
      # mount the source for live reload
      - ./docker-app/qfieldcloud:/usr/src/app/qfieldcloud
    environment:
      # run flush, migrate and collectstatic in entrypoint
      DEBUG: 1
      STORAGE_ENDPOINT_URL_EXTERNAL: ${STORAGE_ENDPOINT_URL_EXTERNAL}
      STORAGE_BROWSER_PORT: ${STORAGE_BROWSER_PORT}
    command: python3 manage.py runserver 0.0.0.0:8000
    depends_on:
      - geodb
      - s3
      - smtp4dev

  worker_wrapper:
    volumes:
      # mount the source for live reload
      - ./docker-app/qfieldcloud:/usr/src/app/qfieldcloud
      - ./docker-app/worker_wrapper:/usr/src/app/worker_wrapper

  # smtp4dev:
  #   image: rnwood/smtp4dev:v3
  #   restart: always
  #   ports:
  #     # Web interface
  #     - '5000:80'
  #     # SMTP server
  #     - '25:25'
  #     # IMAP
  #     - '143:143'
  #   volumes:
  #       - smtp4dev_data:/smtp4dev
  #   environment:
  #     # Specifies the server hostname. Used in auto-generated TLS certificate if enabled.
  #     - ServerOptions__HostName=smtp4dev

  geodb:
    image: postgis/postgis:12-3.0
    restart: unless-stopped
    volumes:
      - geodb_data:/var/lib/postgresql
    environment:
      POSTGRES_DB: ${GEODB_DB}
      POSTGRES_USER: ${GEODB_USER}
      POSTGRES_PASSWORD: ${GEODB_PASSWORD}
    ports:
      - ${GEODB_PORT}:5432

  # web:
  #   environment:
  #     CADDY_IMPORT_GLOB: Caddyfile.proxy-minio
  #   volumes:
  #     # Include config for reverse proxying caddy
  #     - ./docker-caddy/Caddyfile.proxy-minio:/etc/caddy/Caddyfile.proxy-minio

  # s3:
  #   image: minio/minio:RELEASE.2021-07-27T02-40-15Z
  #   restart: unless-stopped
  #   volumes:
  #     - s3_data1:/data1
  #     - s3_data2:/data2
  #     - s3_data3:/data3
  #     - s3_data4:/data4
  #   environment:
  #     MINIO_ROOT_USER: ${STORAGE_ACCESS_KEY_ID}
  #     MINIO_ROOT_PASSWORD: ${STORAGE_SECRET_ACCESS_KEY}
  #     MINIO_BROWSER_REDIRECT_URL: http://${QFIELDCLOUD_HOST}:${STORAGE_BROWSER_PORT}
  #   command: server /data{1...4} --console-address :9001
  #   healthcheck:
  #       test: [
  #       "CMD",
  #       "curl",
  #       "-A",
  #       "Mozilla/5.0 (X11; Linux x86_64; rv:30.0) Gecko/20100101 Firefox/30.0",
  #       "-f",
  #       "${STORAGE_ENDPOINT_URL}/minio/index.html"]
  #       interval: 5s
  #       timeout: 20s
  #       retries: 5
  #   ports:
  #     - ${STORAGE_BROWSER_PORT}:9001

  # createbuckets:
  #   image: minio/mc
  #   depends_on:
  #     s3:
  #       condition: service_healthy
  #   entrypoint: >
  #     /bin/sh -c "
  #     /usr/bin/mc config host add myminio ${STORAGE_ENDPOINT_URL} ${STORAGE_ACCESS_KEY_ID} ${STORAGE_SECRET_ACCESS_KEY};
  #     /usr/bin/mc mb myminio/${STORAGE_BUCKET_NAME};
  #     /usr/bin/mc policy set download myminio/${STORAGE_BUCKET_NAME}/users;
  #     /usr/bin/mc version enable myminio/${STORAGE_BUCKET_NAME};
  #     exit 0;
  #     "

volumes:
  geodb_data:
  # smtp4dev_data:
  # s3_data1:
  # s3_data2:
  # s3_data3:
  # s3_data4:
